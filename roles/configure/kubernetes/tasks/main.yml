- name: Setup k3s 
  tags: ["k3s-setup"]
  block: 
    - import_tasks: helm.yml 

    - import_tasks: firewall.yml 

    - name: Install Ansible Python dep 
      apt: 
        name: 
          - python3-kubernetes

    - name: Download k3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s-install.sh

    - name: Create a directory for manifests
      ansible.builtin.file:
        path: /var/manifests
        state: directory

    # Set the master node
    - name: Set variable for the first host based on the ENVIRONMENT variable
      set_fact:
        first_host: "{{ groups[ENVIRONMENT] | first }}"
      run_once: true  

    - name: Set KUBERNETES_MASTER to true for the first host
      set_fact:
        KUBERNETES_MASTER: "true"
      when: inventory_hostname == first_host

    - name: Set Join IP
      set_fact: 
        KUBERNETES_IP: "{{ ansible_default_ipv4.address }}"
      when: KUBERNETES_MASTER

    - name: Create Rancher Directory
      ansible.builtin.file:
        path: /etc/rancher
        state: directory

    - name: Create k3s Directory
      ansible.builtin.file:
        path: /etc/rancher/k3s
        state: directory

    - name: Copy K3s Config
      ansible.builtin.template:
        src: k3s-values.yml.j2
        dest: /etc/rancher/k3s/config.yaml

- name: Setup master node
  tags: ["master-setup"]
  when: KUBERNETES_MASTER
  block:
    - name: Install as Master
      command: sh /tmp/k3s-install.sh server
      environment: 
        K3S_TOKEN: "{{ K3S_TOKEN }}"

- name: Setup agent node 
  tags: ["agent-setup"]
  when: not KUBERNETES_MASTER
  block:
    - name: Install as Agent
      command: sh /tmp/k3s-install.sh server --server https://{{ hostvars[groups[ENVIRONMENT][0]]['KUBERNETES_IP'] }}:6443
      environment: 
        K3S_TOKEN: "{{ K3S_TOKEN }}"
