---
- name: Configure admin account and SSH Access
  tags: ["access"]
  block:
    - name: Create an administrative user
      become_user: root
      user:
        name: "{{ DEPLOY_USER }}"
        comment: "Administrative User"
        groups: sudo
        create_home: yes

    - name: Create .ssh directory
      become_user: root
      file:
        path: "/home/{{ DEPLOY_USER }}/.ssh"
        state: directory
        owner: "{{ DEPLOY_USER }}"
        group: "{{ DEPLOY_USER }}"
        mode: "0700"

    - name: Fetch public keys from GitHub
      uri:
        url: "https://api.github.com/users/{{ github_user }}/keys"
        return_content: yes
      register: github_keys

    - name: Ensure authorized_keys file exists
      become_user: root
      file:
        path: "/home/{{ DEPLOY_USER }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ DEPLOY_USER }}"
        group: "{{ DEPLOY_USER }}"
        mode: "0600"

    - name: Add GitHub public keys to authorized_keys
      become_user: root
      lineinfile:
        path: "/home/{{ DEPLOY_USER }}/.ssh/authorized_keys"
        line: "{{ item.key }}"
        create: yes
        owner: "{{ DEPLOY_USER }}"
        group: "{{ DEPLOY_USER }}"
        mode: "0600"
        state: present
      loop: "{{ github_keys.json }}"

    - name: Ensure sudoers file for admin user
      become_user: root
      copy:
        dest: "/etc/sudoers.d/{{ DEPLOY_USER }}"
        content: "{{ DEPLOY_USER }} ALL=(ALL) NOPASSWD:ALL"
        mode: "0440"

    - name: Sync Ansible_user authorized keys
      get_url:
        url: "https://raw.githubusercontent.com/meyersa/ansible/main/ansible.pub"
        dest: "/home/{{ DEPLOY_ANSIBLE_USER }}/.ssh/authorized_keys"
        owner: "{{ DEPLOY_ANSIBLE_USER }}"
        group: "{{ DEPLOY_ANSIBLE_USER }}"
        mode: "0600"
      notify: restart ssh

    - name: Disable passwordless SSH authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication\s+yes'
        line: "PasswordAuthentication no"
        state: present

    - name: restart ssh
      service:
        name: ssh
        state: restarted
