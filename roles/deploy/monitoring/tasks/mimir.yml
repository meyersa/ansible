- name: Mimir
  tags: ["mimir"]
  vars:
    MIMIR_DATA_DIR: "{{ DATA_DIR }}/mimir"
    MIMIR_STATIC_DIR: "{{ STATIC_DIR }}/mimir"
    MIMIR_CREDS_FILE: "{{ MIMIR_STATIC_DIR }}/creds.env"
  block:
    - name: Create Mimir network
      docker_network:
        name: mimir

    - name: Create Mimir data directory
      file:
        path: "{{ MIMIR_DATA_DIR }}"
        state: directory
        owner: 10001
        group: 10001
        mode: "0755"

    - name: Create Mimir config directory
      file:
        path: "{{ MIMIR_STATIC_DIR }}"
        state: directory
        owner: 10001
        group: 10001
        mode: "0755"

    - name: Deploy Mimir config
      template:
        src: mimir-config.yaml.j2
        dest: "{{ MIMIR_STATIC_DIR }}/local-config.yaml"
        owner: 10001
        group: 10001
        mode: "0644"
      register: mimir_config_result

    - name: Add Mimir container
      docker_container:
        name: mimir
        image: grafana/mimir:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: mimir
          - name: traefik
        published_ports:
          - "127.0.0.1:9009:9009"
        command: -config.file=/etc/mimir/local-config.yaml
        volumes:
          - "{{ MIMIR_DATA_DIR }}:/mimir"
          - "{{ MIMIR_STATIC_DIR }}/local-config.yaml:/etc/mimir/local-config.yaml"
        labels:
          traefik.enable: "true"
          traefik.http.routers.mimir.rule: "Host(`mimir.{{ BACKEND_DOMAIN }}`)"
          traefik.http.routers.mimir.entrypoints: "apisecure"
          traefik.http.services.mimir.loadbalancer.server.port: "9009"
          traefik.http.middlewares.mimir-auth.basicauth.users: "{{ MIMIR_USER }}:{{ MIMIR_PASS }}"
          traefik.http.middlewares.mimir-auth.basicauth.removeheader: "true"
          traefik.http.routers.Mimir.middlewares: "mimir-auth@docker"
          alloy.scrape: "true"
          alloy.job: "mimir"
          alloy.port: "9009"
      register: mimir_container_result

    - name: Restart Mimir if config changed but container did not
      docker_container:
        name: mimir
        restart: true
      when: mimir_config_result.changed and not mimir_container_result.changed
