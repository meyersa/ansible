---
- name: Grafana
  tags: ["grafana"]
  vars:
    GRAFANA_DATA_DIR: "{{ DATA_DIR }}/grafana"
    GRAFANA_STATIC_DIR: "{{ STATIC_DIR }}/grafana"
    GRAFANA_URL: "dash.{{ BACKEND_DOMAIN }}"
  block:
    - name: Create Grafana data directory
      file:
        path: "{{ GRAFANA_DATA_DIR }}"
        state: directory
        owner: 472
        group: 472
        mode: '0755'

    - name: Create Grafana config directory
      file:
        path: "{{ GRAFANA_STATIC_DIR }}"
        state: directory
        owner: 472
        group: 472
        mode: '0755'

    - name: Copy Grafana provisioning files
      copy:
        src: "grafana_provisioning/"
        dest: "{{ GRAFANA_STATIC_DIR }}/provisioning/"
        owner: 472
        group: 472
        mode: 0644
        directory_mode: 0755
      register: provisioning_copy_result

    - name: Add Grafana container
      docker_container:
        name: grafana
        image: grafana/grafana:latest
        state: started
        restart_policy: unless-stopped
        networks:
          - name: traefik
          - name: loki
          - name: mimir
        volumes:
          - "{{ GRAFANA_DATA_DIR }}:/var/lib/grafana"
          - "{{ GRAFANA_STATIC_DIR }}/provisioning:/etc/grafana/provisioning"
        published_ports:
          - "127.0.0.1:3000:3000"
        env: 
          GF_SERVER_DOMAIN: "{{ GRAFANA_URL }}" 
          GF_SERVER_ROOT_URL: "https://{{ GRAFANA_URL }}/"
          GF_SECURITY_ADMIN_USER: "{{ GRAFANA_USER }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ GRAFANA_PASS }}"
          GF_DEFAULT_INSTANCE_NAME: "{{ ENVIRONMENT | capitalize}}"
          GF_WELCOME_ENABLED: "false"
          GF_FEATURE_TOGGLES_ENABLE: "publicDashboards"
          GF_ANALYTICS_ENABLED: "false"
          GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/etc/grafana/provisioning/dashboards/Overview.json"
          DISCORD_WEBHOOK_URL: "{{ GF_DISCORD_WEBHOOK }}"
        labels:
          traefik.enable: "true"
          traefik.http.routers.grafana.rule: "Host(`{{ GRAFANA_URL }}`)"
          traefik.http.routers.grafana.entrypoints: "websecure"
          traefik.http.services.grafana.loadbalancer.server.port: "3000"
          alloy.scrape: "true"
          alloy.job: "grafana"
          alloy.port: "3000"
          alloy.blackbox: "{{ GRAFANA_URL }}" 
      register: grafana_container_result

    - name: Restart Grafana if provisioning changed but container didnâ€™t
      docker_container:
        name: grafana
        restart: true
      when: provisioning_copy_result.changed and not grafana_container_result.changed