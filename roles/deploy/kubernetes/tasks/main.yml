---
- name: Install MicroK8s
  community.general.snap:
    name: microk8s
    classic: true

- name: Add ansible to MicroK8s group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: microk8s
    append: true

- name: Add generic user to MicroK8s group
  ansible.builtin.user:
    name: "{{ DEPLOY_USER }}"
    groups: microk8s
    append: true

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: "/home/{{ DEPLOY_USER }}/.kube"
    owner: "{{ DEPLOY_USER }}"
    group: "{{ DEPLOY_USER }}"
    state: directory
    mode: '0644'

  # TODO: Restrict this by network/endpoints
- name: Open UFW Port for K8s
  community.general.ufw:
    rule: allow
    port: '25000'

- name: Setup master node
  when: "'master' in group_names"
  block:
    # TODO: Restrict this by network/endpoints
    - name: Open UFW Port for K8 master
      community.general.ufw:
        rule: allow
        port: '16443'
        
    - name: Enable CIS Hardening 
      shell: microk8s enable cis-hardening

    - name: Enable community plugins 
      shell: microk8s enable community

    - name: Enable Trivy security scans 
      shell: microk8s enable trivy

    - name: Add Node Command
      shell: microk8s add-node --token-ttl 3600
      register: join_cluster

    - name: Set Join as Fact
      set_fact:
        join: "{{ join_cluster.stdout_lines[4] }}"

    - name: Add K8s join command to a dummy host
      add_host:
        name: K8_Holder
        command: "{{ join }}"

# TODO: Don't run if already in a cluster
- name: Join from command
  when: "'worker' in group_names"
  shell: "{{ hostvars['K8_Holder']['command'] }}"

  